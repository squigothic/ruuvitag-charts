{"version":3,"sources":["services/measurements.js","components/Chart.js","components/Togglable.js","components/ChartHeader.js","components/RuuviChart.js","components/Heading.js","App.js","index.js"],"names":["require","config","baseUrl","services_measurements","console","log","concat","axios","get","ChartData","styled","div","_templateObject","Chart","_ref","measurements","tempValues","map","measure","temperature","humValues","relativehumidity","data","labels","Date","timestamp","date","getHours","getMinutes","slice","datasets","label","yAxisID","borderColor","fill","borderWidth","pointRadius","pointHitRadius","react_default","a","createElement","es","options","title","display","text","legend","scales","yAxes","type","position","id","ExtraInfoWrapper","Togglable_templateObject","HiliteNumber","span","_templateObject2","props","color","ExtraInfo","averageTemp","ChartHeaderWrapper","ChartHeader_templateObject","ChartTitle","h4","ChartHeader_templateObject2","LatestData","_templateObject3","_templateObject4","ToggleButton","_templateObject5","ChartHeader","name","latestHum","latestTemp","_useState","useState","_useState2","Object","slicedToArray","togglable","setTogglable","ChartHeader_HiliteNumber","onClick","Togglable","ChartWrapper","RuuviChart_templateObject","RuuviChart","length","Number","parseFloat","t","reduce","b","toPrecision","components_ChartHeader","components_Chart","HeaderContainer","Heading_templateObject","TitleWrapper","Heading_templateObject2","Title","h2","Heading_templateObject3","Heading","PageWrapper","App_templateObject","MainContent","App_templateObject2","App","measurementsOne","setMeasurementsOne","_useState3","_useState4","measurementsTwo","setMeasurementsTwo","_useState5","_useState6","measurementsThree","setMeasurementsThree","_useState7","_useState8","measurementsFour","setMeasurementsFour","_useState9","_useState10","loaded","setLoaded","useEffect","measurementService","then","response","distinctTags","getGroupedBy","catch","err","key","groups","result","forEach","push","components_Heading","components_RuuviChart","className","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0558015d.chunk.js","sourcesContent":["import axios from 'axios'\nrequire('dotenv').config()\n\nconst baseUrl = 'https://indoortemp-f1d63.appspot.com/measurements'\n\nconst getAll = () => {\n  console.log(`Tehdään pyyntö osoitteeseen ${baseUrl}`)\n  return axios.get(baseUrl)\n}\n\nexport default { getAll }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Line } from 'react-chartjs-2'\n\nconst ChartData = styled.div`\n`\n\nconst Chart = ({ measurements }) => {\n\n  const tempValues = measurements.map(measure => measure.temperature)\n  const humValues = measurements.map(measure => measure.relativehumidity)\n  const timestamps = measurements.map(measure => new Date(measure.timestamp * 1000))\n  const hoursMinutes = timestamps.map(date => date.getHours() + ':' + ('0' + date.getMinutes()).slice(-2))\n\n  const data = {\n    labels: hoursMinutes,\n    datasets: [{\n      label: 'Lämpötila',\n      yAxisID: 'tempAxis',\n      borderColor: 'rgb(255, 99, 132)',\n      fill: false,\n      data: tempValues,\n      borderWidth: 3,\n      pointRadius: 0,\n      pointHitRadius: 10\n    },\n    {\n      label: 'Ilmankosteus',\n      yAxisID: 'humAxis',\n      borderColor: 'rgb(45, 94, 132',\n      fill: false,\n      data: humValues,\n      borderWidth: 3,\n      pointRadius: 0,\n      pointHitRadius: 10\n    }]\n  }\n\n  const options = {\n    title: {\n      display: false,\n      text: 'Lämpötila ja suhteellinen ilmankosteus'\n    },\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          position: 'left',\n          id: 'tempAxis',\n          // ticks: {\n          //   max: 26,\n          //   min: 19\n          // }\n        }, {\n          type: 'linear',\n          position: 'right',\n          id: 'humAxis',\n          // ticks: {\n          //   max:101,\n          //   min: 80\n          // }\n        }\n      ]\n    }\n  }\n\n  return (\n    <ChartData>\n      <Line data={data} options={options} />\n    </ChartData>\n  )\n}\n\nexport default Chart\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ExtraInfoWrapper = styled.div`\n  margin-top: 5px;\n`\n\nconst HiliteNumber = styled.span`\n  color: ${props => props.color};\n  margin-left: 5px;\n  margin-right: 5px;\n`\n\nconst ExtraInfo = ({ averageTemp }) => (\n  <ExtraInfoWrapper>\n\n    Average (24h):<HiliteNumber color='#e55977'>{averageTemp}</HiliteNumber>\n  </ExtraInfoWrapper>\n)\n\nexport default ExtraInfo\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport ExtraInfo from './Togglable'\n\nconst ChartHeaderWrapper = styled.div`\n  padding: 0.5em 0em;\n  border-bottom: 2px solid #3089AF;\n  margin-bottom: 10px;\n`\n\nconst ChartTitle = styled.h4`\n  font-size: 28px;\n  @media (max-width: 768px) {\n    font-size: 18px;\n  }\n  margin-bottom: 0.1em;\n  margin-top:0;\n  margin-right: 0.2em;\n  color: #3089AF;\n  font-family: helvetica;\n`\n\nconst LatestData = styled.div`\n  color: #4e4e4e;\n  font-family: monospace;\n  font-weight: 550;\n`\nconst HiliteNumber = styled.span`\n  color: ${props => props.color};\n  margin-left: 5px;\n  margin-right: 5px;\n`\n\nconst ToggleButton = styled.div`\n  font-size: 16px;\n  padding-left: 20px;\n  display: inline-block;\n`\n\nconst ChartHeader = ({ name, latestHum, latestTemp, averageTemp }) => {\n\n  const [togglable, setTogglable] = useState(false)\n\n  const handleClick = () => {\n    setTogglable(!togglable)\n  }\n\n  return (\n    <ChartHeaderWrapper>\n      <ChartTitle>{name}</ChartTitle>\n      <LatestData>\n        Temperature:\n      <HiliteNumber color='#e55977'>\n          {latestTemp}\n        </HiliteNumber>\n        Humidity:\n      <HiliteNumber color='#2d5e84'>{latestHum}</HiliteNumber>\n        <ToggleButton onClick={handleClick}>\n          {togglable ? '▲' : '▼'}\n        </ToggleButton>\n        {togglable && <ExtraInfo averageTemp={averageTemp} />}\n      </LatestData>\n    </ChartHeaderWrapper>\n  )\n}\n\nexport default ChartHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport Chart from './Chart'\nimport ChartHeader from './ChartHeader'\n\nconst ChartWrapper = styled.div`\n  @media (min-width: 768px) {\n    margin-top: 20px;\n  }\n`\nconst RuuviChart = ({ data, name }) => {\n  const latestTemp = data[data.length - 1].temperature\n  const latestHum = data[data.length - 1].relativehumidity\n\n  const averageTemp = Number.parseFloat(data\n    .map(t => t.temperature)\n    .reduce((a, b) => (a + b)) / data.length)\n    .toPrecision(4)\n\n  return (\n    <ChartWrapper>\n      <ChartHeader name={name} latestHum={latestHum} latestTemp={latestTemp} averageTemp={averageTemp} />\n      <Chart measurements={data} />\n    </ChartWrapper>\n  )\n}\n\nexport default RuuviChart\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst HeaderContainer = styled.div`\n  background: #E8ECEF;\n  height: 90px;\n  line-height: 90px;\n  margin-bottom: 20px;\n`\n\nconst TitleWrapper = styled.div`\n  width: 90%;\n  margin: auto;\n`\nconst Title = styled.h2`\n  color: #274262;\n  font-size: 48px;\n  margin-top: 0;\n  margin-bottom: 0;\n  font-family: 'Helvetica', sans-serif;\n`\n\nconst Heading = () => (\n  <HeaderContainer>\n    <TitleWrapper>\n      <Title>Ruuvifrontend</Title>\n    </TitleWrapper>\n  </HeaderContainer>\n)\n\nexport default Heading\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport measurementService from './services/measurements'\nimport RuuviChart from './components/RuuviChart'\nimport Heading from './components/Heading'\n\nconst PageWrapper = styled.div`\n\n`\n\nconst MainContent = styled.div`\n  width: 90%;\n  margin: auto;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nconst App = () => {\n  const [measurementsOne, setMeasurementsOne] = useState([])\n  const [measurementsTwo, setMeasurementsTwo] = useState([])\n  const [measurementsThree, setMeasurementsThree] = useState([])\n  const [measurementsFour, setMeasurementsFour] = useState([])\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    measurementService\n      .getAll()\n      .then(response => {\n        console.log('pyyntö onnistui')\n        const distinctTags = getGroupedBy(response.data, 'tagname')\n        setMeasurementsOne(distinctTags[0])\n        setMeasurementsTwo(distinctTags[1])\n        setMeasurementsThree(distinctTags[2])\n        setMeasurementsFour(distinctTags[3])\n        setLoaded(true)\n      })\n      .catch(err => {\n        console.log('virhe: ', err)\n      })\n  }, [])\n\n  const getGroupedBy = (data, key) => {\n    let groups = {}\n    let result = []\n    data.forEach((a) => {\n      if (!(a[key] in groups)) {\n        groups[a[key]] = []\n        result.push(groups[a[key]])\n      }\n      groups[a[key]].push(a)\n    })\n    return result\n  }\n\n  console.log('measurements1: ', measurementsOne)\n  console.log('measurements2: ', measurementsTwo)\n  if (loaded) {\n    return (\n      <PageWrapper>\n        <Heading />\n        <MainContent>\n          <RuuviChart data={measurementsOne} name='Parveke' />\n          <RuuviChart data={measurementsTwo} name='Makuuhuone' />\n          <RuuviChart data={measurementsThree} name='Kylppäri' />\n          <RuuviChart data={measurementsFour} name='Olohuone' />\n        </MainContent>\n      </PageWrapper>\n    )\n  }\n\n  return (\n    <div>\n      <h1 className='titleCentered'>Ruuvifrontend</h1>\n    </div>\n  )\n}\n\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}